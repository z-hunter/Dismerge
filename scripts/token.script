-- –ü–æ–¥–∫–ª—é—á–∞–µ–º –º–æ–¥—É–ª—å —ç–≤–æ–ª—é—Ü–∏–æ–Ω–Ω—ã—Ö —Ç–∞–±–ª–∏—Ü
local evolution_tables = require("scripts.evolution_tables")

go.property("level", 1)
go.property("grid_x", 1)
go.property("grid_y", 1)

-- –°–∫–æ—Ä–æ—Å—Ç—å –¥–≤–∏–∂–µ–Ω–∏—è
local move_speed = 2500  -- –ø–∏–∫—Å–µ–ª–µ–π –≤ —Å–µ–∫—É–Ω–¥—É

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≤–∏–∑—É–∞–ª—å–Ω–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —É—Ä–æ–≤–Ω—è
local function update_level_visual(self)
	-- –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É —Ñ–∏—à–∫–∏ —É–Ω–∏–∫–∞–ª—å–Ω—ã–π —Å–ø—Ä–∞–π—Ç
	if self.has_custom_sprite then
		-- –£ —Ñ–∏—à–∫–∏ –µ—Å—Ç—å —É–Ω–∏–∫–∞–ª—å–Ω—ã–π —Å–ø—Ä–∞–π—Ç - –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º label —É—Ä–æ–≤–Ω—è
		return
	end
	
	-- –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–∫—Å—Ç
	local text = tostring(self.level)
	label.set_text("#label", text)
	
	-- –ü–æ–ª—É—á–∞–µ–º —Ü–≤–µ—Ç –¥–ª—è —ç–≤–æ–ª—é—Ü–∏–æ–Ω–Ω–æ–π —Ü–µ–ø–æ—á–∫–∏
	local color = evolution_tables.get_chain_color(self.evo_id)
	go.set("#label", "color", color)
	
	-- –ò–∑–º–µ–Ω—è–µ–º –º–∞—Å—à—Ç–∞–± –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —É—Ä–æ–≤–Ω—è
	local scale = vmath.vector3(0.8 + self.level * 0.1, 0.8 + self.level * 0.1, 1.0)
	go.set("#label", "scale", scale)
end

function init(self)
	self.level = self.level
	self.grid_x = self.grid_x
	self.grid_y = self.grid_y
	
	-- evo_id –±—É–¥–µ—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —á–µ—Ä–µ–∑ —Å–æ–æ–±—â–µ–Ω–∏–µ set_evo_id
	-- –ü–æ–∫–∞ —á—Ç–æ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
	if not self.evo_id or self.evo_id == "" then
		self.evo_id = "TLS"  -- –í—Ä–µ–º–µ–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
	end
	
	print("TOKEN: Initialized token at grid(" .. self.grid_x .. ", " .. self.grid_y .. ")")
	
	-- –í–∏–∑—É–∞–ª—å–Ω–æ–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –±—É–¥–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–æ –ø–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è set_evo_id —Å–æ–æ–±—â–µ–Ω–∏—è
end

function update(self, dt)
	-- –ù–û–í–ê–Ø –°–ò–°–¢–ï–ú–ê: –ü—Ä–æ—Å—Ç–∞—è –∞–Ω–∏–º–∞—Ü–∏—è –¥–≤–∏–∂–µ–Ω–∏—è
	if self.move_target then
		local current_pos = go.get_position(".")
		local direction = self.move_target - current_pos
		local distance = vmath.length(direction)
		
		if distance > 1 then
			-- –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –¥–≤–∏–∂–µ–Ω–∏–µ
			local movement = vmath.normalize(direction) * move_speed * dt
			if vmath.length(movement) > distance then
				movement = direction
			end
			go.set_position(current_pos + movement, ".")
		else
			-- –î–æ—Å—Ç–∏–≥–ª–∏ —Ü–µ–ª–∏
			go.set_position(self.move_target, ".")
			self.move_target = nil
		end
	end
end

function on_message(self, message_id, message, sender)
	if message_id == hash("start_drag") then
		-- –ù–û–í–ê–Ø –°–ò–°–¢–ï–ú–ê: –ù–∞—á–∞–ª–æ –ø–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–Ω–∏—è
		print("TOKEN: Received start_drag at grid(" .. self.grid_x .. ", " .. self.grid_y .. ") evo_id=" .. tostring(self.evo_id) .. " level=" .. tostring(self.level))
		self.is_dragging = true
		-- –í–∏–∑—É–∞–ª—å–Ω—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã –¥–ª—è –ø–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–Ω–∏—è
		go.set_scale(vmath.vector3(1.2, 1.2, 1.0), ".")
		
		-- –ò–∑–º–µ–Ω—è–µ–º label —Ç–æ–ª—å–∫–æ –¥–ª—è –æ–±—ã—á–Ω—ã—Ö —Ñ–∏—à–µ–∫ (–±–µ–∑ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —Å–ø—Ä–∞–π—Ç–æ–≤)
		if not self.has_custom_sprite then
			go.set("#label", "color", vmath.vector4(1, 1, 1, 0.8))
		end

		
	elseif message_id == hash("stop_drag") then
		-- –ù–û–í–ê–Ø –°–ò–°–¢–ï–ú–ê: –û–∫–æ–Ω—á–∞–Ω–∏–µ –ø–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–Ω–∏—è
		print("TOKEN: Received stop_drag at grid(" .. self.grid_x .. ", " .. self.grid_y .. ") evo_id=" .. tostring(self.evo_id) .. " level=" .. tostring(self.level))
		self.is_dragging = false
		-- –í–æ–∑–≤—Ä–∞—â–∞–µ–º –Ω–æ—Ä–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä –∏ —Ü–≤–µ—Ç
		go.set_scale(vmath.vector3(1.0, 1.0, 1.0), ".")
		
		-- –û–±–Ω–æ–≤–ª—è–µ–º –≤–∏–∑—É–∞–ª –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ —Ñ–∏—à–∫–∏
		if self.has_custom_sprite then
			-- –£ —Ñ–∏—à–∫–∏ –µ—Å—Ç—å —É–Ω–∏–∫–∞–ª—å–Ω—ã–π —Å–ø—Ä–∞–π—Ç - label –æ—Å—Ç–∞–µ—Ç—Å—è –ø—É—Å—Ç—ã–º
			label.set_text("#label", " ")
		else
			-- –û–±—ã—á–Ω–∞—è —Ñ–∏—à–∫–∞ - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º label —É—Ä–æ–≤–Ω—è
			update_level_visual(self)
		end
		
	elseif message_id == hash("set_position") then
		-- –ù–û–í–ê–Ø –°–ò–°–¢–ï–ú–ê: –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–æ–∑–∏—Ü–∏–∏ (–¥–ª—è —Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –∑–∞ –∫—É—Ä—Å–æ—Ä–æ–º)
		go.set_position(message.position, ".")
		if message.position and message.position.z and message.position.z > 0 then
			print("DEBUG: TOKEN SET_POSITION Z = " .. tostring(message.position.z) .. " at pos (" .. tostring(message.position.x) .. ", " .. tostring(message.position.y) .. ")")
		end
		
	elseif message_id == hash("move_to") then
		-- –ù–û–í–ê–Ø –°–ò–°–¢–ï–ú–ê: –ü–ª–∞–≤–Ω–æ–µ –¥–≤–∏–∂–µ–Ω–∏–µ –∫ —Ü–µ–ª–∏
		if message.smooth then
			self.move_target = message.position
		else
			go.set_position(message.position, ".")
		end
		
	elseif message_id == hash("set_grid_position") then
		-- –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã —Å–µ—Ç–∫–∏
		self.grid_x = message.grid_x
		self.grid_y = message.grid_y
		
	elseif message_id == hash("update_level") then
		-- –û–±–Ω–æ–≤–ª—è–µ–º —É—Ä–æ–≤–µ–Ω—å –∏ –≤–∏–∑—É–∞–ª
		self.level = message.level
		
		-- –û–±–Ω–æ–≤–ª—è–µ–º –≤–∏–∑—É–∞–ª —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —É —Ñ–∏—à–∫–∏ –Ω–µ—Ç —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ —Å–ø—Ä–∞–π—Ç–∞
		if not self.has_custom_sprite then
			update_level_visual(self)
		end
		
	elseif message_id == hash("update_evo_id") then
		-- –û–±–Ω–æ–≤–ª—è–µ–º ID —ç–≤–æ–ª—é—Ü–∏–æ–Ω–Ω–æ–π —Ü–µ–ø–æ—á–∫–∏ –∏ –≤–∏–∑—É–∞–ª
		self.evo_id = message.evo_id
		
		-- –û–±–Ω–æ–≤–ª—è–µ–º –≤–∏–∑—É–∞–ª —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —É —Ñ–∏—à–∫–∏ –Ω–µ—Ç —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ —Å–ø—Ä–∞–π—Ç–∞
		if not self.has_custom_sprite then
			update_level_visual(self)
		end
		
	elseif message_id == hash("set_sprite") then
		-- üé® –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π —Å–ø—Ä–∞–π—Ç –¥–ª—è —Ñ–∏—à–∫–∏
		if message.atlas_id and message.sprite_name then
			print("TOKEN: Setting sprite " .. message.sprite_name .. " from atlas " .. message.atlas_id)
			
			-- –ü—Ä–æ—Å—Ç–æ –ø–µ—Ä–µ–∫–ª—é—á–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é —Å–ø—Ä–∞–π—Ç–∞ –Ω–∞ –Ω—É–∂–Ω—ã–π —Å–ø—Ä–∞–π—Ç –∏–∑ –∞—Ç–ª–∞—Å–∞
			-- –≠—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç, –ø–æ—Ç–æ–º—É —á—Ç–æ –≤—Å–µ —Å–ø—Ä–∞–π—Ç—ã —É–∂–µ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ –∞—Ç–ª–∞—Å–µ evo.atlas
			sprite.play_flipbook("#sprite", message.sprite_name)
			
			-- üéØ –°–∫—Ä—ã–≤–∞–µ–º label —É—Ä–æ–≤–Ω—è, —Ç–∞–∫ –∫–∞–∫ –æ–Ω –≤–∏–¥–µ–Ω –ø–æ –∫–∞—Ä—Ç–∏–Ω–∫–µ
			-- –ó–∞–º–µ–Ω—è–µ–º —Ç–µ–∫—Å—Ç –Ω–∞ –ø—Ä–æ–±–µ–ª –≤–º–µ—Å—Ç–æ –∏–∑–º–µ–Ω–µ–Ω–∏—è Z-–∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã
			label.set_text("#label", " ")
			
			-- –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥, —á—Ç–æ —É —Ñ–∏—à–∫–∏ –µ—Å—Ç—å —É–Ω–∏–∫–∞–ª—å–Ω—ã–π —Å–ø—Ä–∞–π—Ç
			self.has_custom_sprite = true
			
			print("TOKEN: ‚úÖ Sprite animation changed to " .. message.sprite_name .. " and label cleared")
		else
			print("TOKEN: ‚ùå Invalid set_sprite message - missing atlas_id or sprite_name")
		end
		
	elseif message_id == hash("set_evo_id") then
		-- –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º ID —ç–≤–æ–ª—é—Ü–∏–æ–Ω–Ω–æ–π —Ü–µ–ø–æ—á–∫–∏ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
		self.evo_id = message.evo_id
		
		-- –û–±–Ω–æ–≤–ª—è–µ–º –≤–∏–∑—É–∞–ª —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —É —Ñ–∏—à–∫–∏ –Ω–µ—Ç —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ —Å–ø—Ä–∞–π—Ç–∞
		if not self.has_custom_sprite then
			update_level_visual(self)
		end
		
	elseif message_id == hash("get_token_info") then
		-- –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ–∏—à–∫–µ
		local chain = evolution_tables.get_evolution_chain(self.evo_id)
		local item_name = evolution_tables.get_item_name(self.evo_id, self.level)
		
		local info = {
			evo_id = self.evo_id,
			level = self.level,
			chain_name = chain and chain.name or "Unknown",
			item_name = item_name or "Unknown",
			grid_x = self.grid_x,
			grid_y = self.grid_y
		}
		
		msg.post(sender, "token_info", info)
		
	elseif message_id == hash("play_merge_animation") then
		-- –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–π —Ñ–∏—à–∫–∏ –ø—Ä–∏ –º–µ—Ä–¥–∂–µ
		print("TOKEN: Playing merge animation for new token")
		
		-- –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–π –º–∞—Å—à—Ç–∞–± (–º–µ–Ω—å—à–µ –Ω–æ—Ä–º–∞–ª—å–Ω–æ–≥–æ)
		go.set(".", "scale", vmath.vector3(0.85, 0.85, 1.0))
		
		-- –ó–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏—è —Å —ç—Ñ—Ñ–µ–∫—Ç–æ–º –æ—Ç—Å–∫–æ–∫–∞
		go.animate(".", "scale", go.PLAYBACK_ONCE_FORWARD, vmath.vector3(1, 1, 1.0),
				   go.EASING_OUTELASTIC, 0.38)

	end
end 